import{_ as e,c as t,a as n,o as r}from"./app-lOblBL5A.js";const i={};function s(l,a){return r(),t("div",null,a[0]||(a[0]=[n(`<h1 id="kalibr" tabindex="-1"><a class="header-anchor" href="#kalibr"><span>Kalibr</span></a></h1><p>This document covers the setup of <a href="https://github.com/ethz-asl/kalibr" target="_blank" rel="noopener noreferrer">Kalibr</a> for calibrating the extrensics for each camera.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>Please follow the <code>Docker</code> image instructions <a href="https://github.com/ethz-asl/kalibr/wiki/installation" target="_blank" rel="noopener noreferrer">here</a>.</p><p>Note: If using Docker Desktop, you might need to tune your Docker resource allocation for the image to build properly. A tested, working configuration is 10 CPU core limit and 10GB RAM limit. You also need to add <code>/tmp/.X11-unix</code> as a virtual file share under Settings-&gt;Resources-&gt;File Sharing.</p><h2 id="calibration-target" tabindex="-1"><a class="header-anchor" href="#calibration-target"><span>Calibration Target</span></a></h2><p>We currently use a custom calibration target available <a href="https://github.com/iqr-lab/pointcloud_stitching/blob/master/calibration/custom_target.pdf" target="_blank" rel="noopener noreferrer">here</a></p><p>Alternatively, you can generate the target PDF yourself by running inside the container:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">source</span> devel/setup.bash</span>
<span class="line">rosrun kalibr kalibr_create_target_pdf <span class="token parameter variable">--type</span> apriltag <span class="token parameter variable">--nx</span> <span class="token number">5</span> <span class="token parameter variable">--ny</span> <span class="token number">5</span> <span class="token parameter variable">--tsize</span> <span class="token number">0.06</span> <span class="token parameter variable">--tspace</span> <span class="token number">0.3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>When printing, ensure that the printed size is true to the file. Attach the target to a rigid surface for proper calibration.</p>`,10)]))}const c=e(i,[["render",s]]),p=JSON.parse('{"path":"/computer-vision/kalibr.html","title":"Kalibr","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Calibration Target","slug":"calibration-target","link":"#calibration-target","children":[]}],"git":{"updatedTime":1744251327000,"contributors":[{"name":"Neil Song","email":"song.neil.song@gmail.com","commits":1,"url":"https://github.com/Neil Song"}]},"filePathRelative":"computer-vision/kalibr.md"}');export{c as comp,p as data};
